map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen $PORT;
    server_name $SERVER_NAME;

    root /usr/share/nginx/html;
    index index.html;

    set $backend_host $VITE_BACKEND_HOST;
    set $backend_port $VITE_BACKEND_PORT;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    location /api/ {
        resolver 127.0.0.11 valid=30s;

        proxy_pass https://$backend_host:$backend_port/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        set $cors_origin $CORS_ALLOWED_ORIGIN;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    location /static/ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }
}
